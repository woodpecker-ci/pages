"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([["8446"],{35383:function(e,n,i){i.r(n),i.d(n,{metadata:()=>t,contentTitle:()=>r,default:()=>h,assets:()=>d,toc:()=>l,frontMatter:()=>s});var t=JSON.parse('{"id":"development/guides","title":"Guides","description":"ORM","source":"@site/docs/92-development/07-guides.md","sourceDirName":"92-development","slug":"/development/guides","permalink":"/docs/next/development/guides","draft":false,"unlisted":false,"editUrl":"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/docs/92-development/07-guides.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Conventions","permalink":"/docs/next/development/conventions"},"next":{"title":"Translations","permalink":"/docs/next/development/translations"}}'),o=i("52676"),a=i("64360");let s={},r="Guides",d={},l=[{value:"ORM",id:"orm",level:2},{value:"Add a new migration",id:"add-a-new-migration",level:2},{value:"Constants of official images",id:"constants-of-official-images",level:2},{value:"Building images locally",id:"building-images-locally",level:2},{value:"Server",id:"server",level:3},{value:"Agent",id:"agent",level:3},{value:"CLI",id:"cli",level:3}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"guides",children:"Guides"})}),"\n",(0,o.jsx)(n.h2,{id:"orm",children:"ORM"}),"\n",(0,o.jsxs)(n.p,{children:["Woodpecker uses ",(0,o.jsx)(n.a,{href:"https://xorm.io/",children:"Xorm"})," as ORM for the database connection."]}),"\n",(0,o.jsx)(n.h2,{id:"add-a-new-migration",children:"Add a new migration"}),"\n",(0,o.jsxs)(n.p,{children:["Woodpecker uses migrations to change the database schema if a database model has been changed. Add the new migration task into ",(0,o.jsx)(n.code,{children:"server/store/datastore/migration/"}),"."]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Adding new properties to models will be handled automatically by the underlying ",(0,o.jsx)(n.a,{href:"#orm",children:"ORM"})," based on the ",(0,o.jsx)(n.a,{href:"https://stackoverflow.com/questions/10858787/what-are-the-uses-for-tags-in-go",children:"struct field tags"})," of the model. If you add a completely new model, you have to add it to the ",(0,o.jsx)(n.code,{children:"allBeans"})," variable at ",(0,o.jsx)(n.code,{children:"server/store/datastore/migration/migration.go"})," to get a new table created."]})}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsxs)(n.p,{children:["You should not use ",(0,o.jsx)(n.code,{children:"sess.Begin()"}),", ",(0,o.jsx)(n.code,{children:"sess.Commit()"})," or ",(0,o.jsx)(n.code,{children:"sess.Close()"})," inside a migration. Session / transaction handling will be done by the underlying migration manager."]})}),"\n",(0,o.jsxs)(n.p,{children:["To automatically execute the migration after the start of the server, the new migration needs to be added to the end of ",(0,o.jsx)(n.code,{children:"migrationTasks"})," in ",(0,o.jsx)(n.code,{children:"server/store/datastore/migration/migration.go"}),". After a successful execution of that transaction the server will automatically add the migration to a list, so it won't be executed again on the next start."]}),"\n",(0,o.jsx)(n.h2,{id:"constants-of-official-images",children:"Constants of official images"}),"\n",(0,o.jsxs)(n.p,{children:["All official default images, are saved in ",(0,o.jsx)(n.a,{href:"https://github.com/woodpecker-ci/woodpecker/blob/main/shared/constant/constant.go",children:"shared/constant/constant.go"})," and must be pinned by an exact tag."]}),"\n",(0,o.jsx)(n.h2,{id:"building-images-locally",children:"Building images locally"}),"\n",(0,o.jsx)(n.h3,{id:"server",children:"Server"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"### build web component\nmake vendor\ncd web/\npnpm install --frozen-lockfile\npnpm build\ncd ..\n\n### define the platforms to build for (e.g. linux/amd64)\n# (the | is not a typo here)\nexport PLATFORMS='linux|amd64'\nmake cross-compile-server\n\n### build the image\ndocker buildx build --platform linux/amd64 -t username/repo:tag -f docker/Dockerfile.server.multiarch --push .\n"})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"cross-compile-server"})," rule makes use of ",(0,o.jsx)(n.code,{children:"xgo"}),", a go cross-compiler. You need to be on a ",(0,o.jsx)(n.code,{children:"amd64"})," host to do this, as ",(0,o.jsx)(n.code,{children:"xgo"})," is only available for ",(0,o.jsx)(n.code,{children:"amd64"})," (see ",(0,o.jsx)(n.a,{href:"https://github.com/techknowlogick/xgo/issues/213",children:"xgo#213"}),").\nYou can try to use the ",(0,o.jsx)(n.code,{children:"build-server"})," rule instead, however this one fails for some OS (e.g. macOS)."]})}),"\n",(0,o.jsx)(n.h3,{id:"agent",children:"Agent"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"### build the agent\nmake build-agent\n\n### build the image\ndocker buildx build --platform linux/amd64 -t username/repo:tag -f docker/Dockerfile.agent.multiarch --push .\n"})}),"\n",(0,o.jsx)(n.h3,{id:"cli",children:"CLI"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-sh",children:"### build the CLI\nmake build-cli\n\n### build the image\ndocker buildx build --platform linux/amd64 -t username/repo:tag -f docker/Dockerfile.cli.multiarch --push .\n"})})]})}function h(e={}){let{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},64360:function(e,n,i){i.d(n,{Z:function(){return r},a:function(){return s}});var t=i(75271);let o={},a=t.createContext(o);function s(e){let n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);