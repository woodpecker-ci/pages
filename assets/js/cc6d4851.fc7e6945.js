"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([["3376"],{71170:function(t){t.exports=JSON.parse('{"name":"Docker Tags","url":"https://github.com/dvjn/woodpecker-docker-tags-plugin","description":"Plugin to autogenerate tags for building docker images from Git and CI events.","docs":"<p>Woodpecker CI plugin to autogenerate tags for building docker images from Git and CI events.</p>\\n<p>This plugin can be used to autogenerate <code>.tags</code> file for docker build plugins like\\n<a href=\\"https://github.com/woodpecker-ci/plugin-kaniko\\">woodpecker-ci/plugin-kaniko</a>\\nand\\n<a href=\\"https://codeberg.org/woodpecker-plugins/docker-buildx\\">woodpecker-plugins/docker-buildx</a></p>\\n<h2>Settings</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Name</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td>tags</td>\\n<td><em>none</em></td>\\n<td>Configuration for generating tags</td>\\n</tr>\\n<tr>\\n<td>tags_file</td>\\n<td>.tags</td>\\n<td>File to save generated tags</td>\\n</tr>\\n</tbody></table>\\n<h2>Example</h2>\\n<pre><code class=\\"language-yaml\\">steps:\\n  - name: generate_docker_tags\\n    image: ghcr.io/dvjn/woodpecker-docker-tags-plugin\\n    settings:\\n      tags: |\\n        edge\\n        pr\\n        semver --format {{major}}\\n        semver --format {{major}}.{{minor}}\\n        semver --format {{version}}\\n        cron --format nightly-%Y%m%d\\n        sha\\n</code></pre>\\n<h2><code>tags</code> input</h2>\\n<p>This is the main input for this plugin. This is a multiline string. Each line\\nrepresents a different tag to be applied. Each line is in the form of a cli\\ncommand.</p>\\n<p>All the available commands are:</p>\\n<ul>\\n<li><a href=\\"#branch\\"><code>branch</code></a></li>\\n<li><a href=\\"#cron\\"><code>cron</code></a></li>\\n<li><a href=\\"#edge\\"><code>edge</code></a></li>\\n<li><a href=\\"#pr\\"><code>pr</code></a></li>\\n<li><a href=\\"#raw\\"><code>raw</code></a></li>\\n<li><a href=\\"#semver\\"><code>semver</code></a></li>\\n<li><a href=\\"#sha\\"><code>sha</code></a></li>\\n<li><a href=\\"#tag\\"><code>tag</code></a></li>\\n</ul>\\n<hr>\\n<h3><code>branch</code></h3>\\n<p>Generates tags from branch names for push events.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  branch\\n  # with custom prefix\\n  branch -p branch-\\n</code></pre>\\n<p><strong>Options:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-p</code>, <code>--prefix</code></td>\\n<td><em>empty</em></td>\\n<td>Adds a prefix to the branch name.</td>\\n</tr>\\n</tbody></table>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Branch</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>branch</code></td>\\n<td><code>feature/add-logging</code></td>\\n<td><code>feature-add-logging</code></td>\\n</tr>\\n<tr>\\n<td><code>branch -p br-</code></td>\\n<td><code>feature/add-logging</code></td>\\n<td><code>br-feature-add-logging</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>cron</code></h3>\\n<p>Generates datetime based tags on cron events.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  cron\\n  # with custom format\\n  cron -f %Y-%m-%d\\n</code></pre>\\n<p><strong>Options:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-f</code>, <code>--format</code></td>\\n<td><code>%Y%m%d</code></td>\\n<td>The tag format. This supports GNU/date format.<br>You can find the reference for the format <a href=\\"https://www.gnu.org/software/coreutils/manual/html_node/Date-format-specifiers.html\\">here</a>.</td>\\n</tr>\\n</tbody></table>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>cron</code></td>\\n<td><code>20240602</code></td>\\n</tr>\\n<tr>\\n<td><code>cron -f nightly-%Y-%m-%d</code></td>\\n<td><code>nightly-2024-06-02</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>edge</code></h3>\\n<p>Generates edge tags for the default branch. The <code>edge</code> tag reflects the last\\ncommit of the active branch on your Git repository.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  edge\\n  # with custom tag value of \\"next\\"\\n  edge -v next\\n  # using branch other than the repository default branch\\n  edge -b dev\\n</code></pre>\\n<p><strong>Options:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-v</code>, <code>--value</code></td>\\n<td><code>edge</code></td>\\n<td>Specifies the value for the tag.</td>\\n</tr>\\n<tr>\\n<td><code>-b</code>, <code>--branch</code></td>\\n<td><em>repository default</em></td>\\n<td>Specifies the branch name.</td>\\n</tr>\\n</tbody></table>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Branch</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>edge</code></td>\\n<td><code>main</code></td>\\n<td><code>edge</code></td>\\n</tr>\\n<tr>\\n<td><code>edge -v latest</code></td>\\n<td><code>main</code></td>\\n<td><code>latest</code></td>\\n</tr>\\n<tr>\\n<td><code>edge -b dev -v dev</code></td>\\n<td><code>dev</code></td>\\n<td><code>dev</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>pr</code></h3>\\n<p>Generates tag on pull_request event, based on the pull request\'s id.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  pr\\n  # using custom prefix for tags\\n  pr -p pull-\\n</code></pre>\\n<p><strong>Options:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-p</code>, <code>--prefix</code></td>\\n<td><code>pr-</code></td>\\n<td>Adds a prefix to the pull request name.</td>\\n</tr>\\n</tbody></table>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Pull Request ID</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>pr</code></td>\\n<td><code>123</code></td>\\n<td><code>pr-123</code></td>\\n</tr>\\n<tr>\\n<td><code>pr -p pull-</code></td>\\n<td><code>123</code></td>\\n<td><code>pull-123</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>semver</code></h3>\\n<p>Generates tags based on semver versions parsed from pushed git tags.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  smever\\n  # generate major version tag\\n  semver -f {{major}}\\n  # generate major minor version tag\\n  semver -f {{major}}.{{minor}}\\n</code></pre>\\n<p><strong>Options:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-f</code>, <code>--format</code></td>\\n<td><code>{{version}}</code></td>\\n<td>Specifies the format for the tag.</td>\\n</tr>\\n<tr>\\n<td><code>-v</code>, <code>--value</code></td>\\n<td><em>commit tag</em></td>\\n<td>Specifies the value for the tag.</td>\\n</tr>\\n</tbody></table>\\n<p>The <code>format</code> argument supports the following expressions:</p>\\n<ul>\\n<li><code>{{raw}}</code>: the actual tag</li>\\n<li><code>{{version}}</code>: the cleaned up version</li>\\n<li><code>{{major}}</code>: major version identifier</li>\\n<li><code>{{minor}}</code>: minor version identifier</li>\\n<li><code>{{patch}}</code>: patch version identifier</li>\\n</ul>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Tag</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>semver</code></td>\\n<td><code>v1.2.3</code></td>\\n<td><code>1.2.3</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f {{raw}}</code></td>\\n<td><code>v1.2.3</code></td>\\n<td><code>v1.2.3</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f {{version}}</code></td>\\n<td><code>v1.2.3</code></td>\\n<td><code>1.2.3</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f ver-{{major}}</code></td>\\n<td><code>v1.2.3</code></td>\\n<td><code>ver-1</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f v{{major}}.{{minor}}</code></td>\\n<td><code>v1.2.3</code></td>\\n<td><code>v1.2</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f {{patch}}</code></td>\\n<td><code>v1.2.3</code></td>\\n<td><code>3</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f {{version}}</code></td>\\n<td><code>v1.2.3-rc4</code></td>\\n<td><code>1.2.3-rc4</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f {{major}}.{{minor}}</code></td>\\n<td><code>v1.2.3-rc4</code></td>\\n<td><code>1.2</code></td>\\n</tr>\\n<tr>\\n<td><code>semver -f {{patch}}</code></td>\\n<td><code>v1.2.3-rc4</code></td>\\n<td><code>3</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>raw</code></h3>\\n<p>Generates a raw preconfigured tag on any event.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  raw -v last-built\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-v</code>, <code>--value</code></td>\\n<td><em>empty</em></td>\\n<td>Specifies the value for the tag.</td>\\n</tr>\\n</tbody></table>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>raw -v abcd</code></td>\\n<td><code>abcd</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>sha</code></h3>\\n<p>Generates tag using the commit SHA.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  sha\\n  # generates tag with full sha\\n  sha -l\\n  # use custom prefix for sha tag\\n  sha -p commit-\\n</code></pre>\\n<p><strong>Options:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Option</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>-l</code>, <code>--long</code></td>\\n<td><code>false</code></td>\\n<td>Use the full 40 character SHA.</td>\\n</tr>\\n<tr>\\n<td><code>-p</code>, <code>--prefix</code></td>\\n<td><code>sha-</code></td>\\n<td>Adds a prefix to the SHA.</td>\\n</tr>\\n</tbody></table>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>sha</code></td>\\n<td><code>sha-abcdef12</code></td>\\n</tr>\\n<tr>\\n<td><code>sha -l</code></td>\\n<td><code>sha-abcdef1234567890abcdef1234567890abcdef12</code></td>\\n</tr>\\n<tr>\\n<td><code>sha -p commit-</code></td>\\n<td><code>commit-abcdef12</code></td>\\n</tr>\\n</tbody></table>\\n<hr>\\n<h3><code>tag</code></h3>\\n<p>Generates tag from pushed git tag.</p>\\n<pre><code class=\\"language-yaml\\">tags: |\\n  # minimal\\n  tag\\n</code></pre>\\n<p><strong>Examples:</strong></p>\\n<table>\\n<thead>\\n<tr>\\n<th>Command</th>\\n<th>Tag</th>\\n<th>Output</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>tag</code></td>\\n<td><code>v1.0.0</code></td>\\n<td><code>v1.0.0</code></td>\\n</tr>\\n</tbody></table>\\n<h2>Notes</h2>\\n<h3>Tag Sanitization</h3>\\n<ol>\\n<li>All the values are converted to lowercase.</li>\\n<li>All the values apart from alphabets, numbers, hyphen (-), underscore (_) and\\nperiod (.) are replaces with a hyphen.</li>\\n<li>The length of the tag is truncated to 128 characters.</li>\\n</ol>\\n","tags":["docker"],"author":"dvjn","containerImage":"ghcr.io/dvjn/woodpecker-docker-tags-plugin","containerImageUrl":"https://github.com/dvjn/woodpecker-docker-tags-plugin/pkgs/container/woodpecker-docker-tags-plugin","verified":false}')}}]);