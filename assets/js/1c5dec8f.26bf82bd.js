"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([["5524"],{22151:function(e,n,s){s.r(n),s.d(n,{default:()=>h,frontMatter:()=>t,metadata:()=>o,assets:()=>r,toc:()=>d,contentTitle:()=>a});var o=JSON.parse('{"id":"usage/workflows","title":"Workflows","description":"A pipeline has at least one workflow. A workflow is a set of steps that are executed in sequence using the same workspace which is a shared folder containing the repository and all the generated data from previous steps.","source":"@site/versioned_docs/version-2.6/20-usage/25-workflows.md","sourceDirName":"20-usage","slug":"/usage/workflows","permalink":"/docs/2.6/usage/workflows","draft":false,"unlisted":false,"editUrl":"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/versioned_docs/version-2.6/20-usage/25-workflows.md","tags":[],"version":"2.6","sidebarPosition":25,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Workflow syntax","permalink":"/docs/2.6/usage/workflow-syntax"},"next":{"title":"Matrix workflows","permalink":"/docs/2.6/usage/matrix-workflows"}}'),i=s("52676"),l=s("23663");let t={},a="Workflows",r={},d=[{value:"Benefits of using workflows",id:"benefits-of-using-workflows",level:2},{value:"Example workflow definition",id:"example-workflow-definition",level:2},{value:"Status lines",id:"status-lines",level:2},{value:"Flow control",id:"flow-control",level:2}];function c(e){let n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"workflows",children:"Workflows"})}),"\n",(0,i.jsx)(n.p,{children:"A pipeline has at least one workflow. A workflow is a set of steps that are executed in sequence using the same workspace which is a shared folder containing the repository and all the generated data from previous steps."}),"\n",(0,i.jsxs)(n.p,{children:["In case there is a single configuration in ",(0,i.jsx)(n.code,{children:".woodpecker.yaml"})," Woodpecker will create a pipeline with a single workflow."]}),"\n",(0,i.jsxs)(n.p,{children:["By placing the configurations in a folder which is by default named ",(0,i.jsx)(n.code,{children:".woodpecker/"})," Woodpecker will create a pipeline with multiple workflows each named by the file they are defined in. Only ",(0,i.jsx)(n.code,{children:".yml"})," and ",(0,i.jsx)(n.code,{children:".yaml"})," files will be used and files in any subfolders like ",(0,i.jsx)(n.code,{children:".woodpecker/sub-folder/test.yaml"})," will be ignored."]}),"\n",(0,i.jsxs)(n.p,{children:["You can also set some custom path like ",(0,i.jsx)(n.code,{children:".my-ci/pipelines/"})," instead of ",(0,i.jsx)(n.code,{children:".woodpecker/"})," in the ",(0,i.jsx)(n.a,{href:"/docs/2.6/usage/project-settings",children:"project settings"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"benefits-of-using-workflows",children:"Benefits of using workflows"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"faster lint/test feedback, the workflow doesn't have to run fully to have a lint status pushed to the remote"}),"\n",(0,i.jsx)(n.li,{children:"better organization of a pipeline along various concerns using one workflow for: testing, linting, building and deploying"}),"\n",(0,i.jsx)(n.li,{children:"utilizing more agents to speed up the execution of the whole pipeline"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-workflow-definition",children:"Example workflow definition"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsxs)(n.p,{children:["Please note that files are only shared between steps of the same workflow (see ",(0,i.jsx)(n.a,{href:"/docs/2.6/usage/workflow-syntax#file-changes-are-incremental",children:"File changes are incremental"}),"). That means you cannot access artifacts e.g. from the ",(0,i.jsx)(n.code,{children:"build"})," workflow in the ",(0,i.jsx)(n.code,{children:"deploy"})," workflow.\nIf you still need to pass artifacts between the workflows you need use some storage ",(0,i.jsx)(n.a,{href:"/docs/2.6/usage/plugins/overview",children:"plugin"})," (e.g. one which stores files in an Amazon S3 bucket)."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:".woodpecker/\n\u251C\u2500\u2500 .build.yaml\n\u251C\u2500\u2500 .deploy.yaml\n\u251C\u2500\u2500 .lint.yaml\n\u2514\u2500\u2500 .test.yaml\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".woodpecker/.build.yaml"',children:"steps:\n  - name: build\n    image: debian:stable-slim\n    commands:\n      - echo building\n      - sleep 5\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".woodpecker/.deploy.yaml"',children:"steps:\n  - name: deploy\n    image: debian:stable-slim\n    commands:\n      - echo deploying\n\ndepends_on:\n  - lint\n  - build\n  - test\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".woodpecker/.test.yaml"',children:"steps:\n  - name: test\n    image: debian:stable-slim\n    commands:\n      - echo testing\n      - sleep 5\n\ndepends_on:\n  - build\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".woodpecker/.lint.yaml"',children:"steps:\n  - name: lint\n    image: debian:stable-slim\n    commands:\n      - echo linting\n      - sleep 5\n"})}),"\n",(0,i.jsx)(n.h2,{id:"status-lines",children:"Status lines"}),"\n",(0,i.jsx)(n.p,{children:"Each workflow will report its own status back to your forge."}),"\n",(0,i.jsx)(n.h2,{id:"flow-control",children:"Flow control"}),"\n",(0,i.jsx)(n.p,{children:"The workflows run in parallel on separate agents and share nothing."}),"\n",(0,i.jsxs)(n.p,{children:["Dependencies between workflows can be set with the ",(0,i.jsx)(n.code,{children:"depends_on"})," element. A workflow doesn't execute until all of its dependencies finished successfully."]}),"\n",(0,i.jsxs)(n.p,{children:["The name for a ",(0,i.jsx)(n.code,{children:"depends_on"})," entry is the filename without the path, leading dots and without the file extension ",(0,i.jsx)(n.code,{children:".yml"})," or ",(0,i.jsx)(n.code,{children:".yaml"}),". If the project config for example uses ",(0,i.jsx)(n.code,{children:".woodpecker/"})," as path for CI files with a file named ",(0,i.jsx)(n.code,{children:".woodpecker/.lint.yaml"})," the corresponding ",(0,i.jsx)(n.code,{children:"depends_on"})," entry would be ",(0,i.jsx)(n.code,{children:"lint"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:" steps:\n   - name: deploy\n     image: debian:stable-slim\n     commands:\n       - echo deploying\n\n+depends_on:\n+  - lint\n+  - build\n+  - test\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Workflows that need to run even on failures should set the ",(0,i.jsx)(n.code,{children:"runs_on"})," tag."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:" steps:\n   - name: notify\n     image: debian:stable-slim\n     commands:\n       - echo notifying\n\n depends_on:\n   - deploy\n\n+runs_on: [ success, failure ]\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Some workflows don't need the source code, like creating a notification on failure.\nRead more about ",(0,i.jsx)(n.code,{children:"skip_clone"})," at ",(0,i.jsx)(n.a,{href:"/docs/2.6/usage/workflow-syntax#skip_clone",children:"pipeline syntax"})]})})]})}function h(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},23663:function(e,n,s){s.d(n,{Z:function(){return a},a:function(){return t}});var o=s(75271);let i={},l=o.createContext(i);function t(e){let n=o.useContext(l);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);