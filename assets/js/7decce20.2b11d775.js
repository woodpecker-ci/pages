/*! For license information please see 7decce20.2b11d775.js.LICENSE.txt */
"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[2108],{52729:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>d,contentTitle:()=>n,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var s=o(11527),t=o(7463);const r={},n="Databases",i={id:"administration/database",title:"Databases",description:"The default database engine of Woodpecker is an embedded SQLite database which requires zero installation or configuration. But you can replace it with a MySQL or Postgres database.",source:"@site/versioned_docs/version-0.15/30-administration/30-database.md",sourceDirName:"30-administration",slug:"/administration/database",permalink:"/docs/0.15/administration/database",draft:!1,unlisted:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/versioned_docs/version-0.15/30-administration/30-database.md",tags:[],version:"0.15",sidebarPosition:30,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Agent configuration",permalink:"/docs/0.15/administration/agent-config"},next:{title:"SSL",permalink:"/docs/0.15/administration/ssl"}},d={},c=[{value:"Configure sqlite",id:"configure-sqlite",level:2},{value:"Configure MySQL",id:"configure-mysql",level:2},{value:"Configure Postgres",id:"configure-postgres",level:2},{value:"Database Creation",id:"database-creation",level:2},{value:"Database Migration",id:"database-migration",level:2},{value:"Database Backups",id:"database-backups",level:2},{value:"Database Archiving",id:"database-archiving",level:2}];function l(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"databases",children:"Databases"}),"\n",(0,s.jsx)(a.p,{children:"The default database engine of Woodpecker is an embedded SQLite database which requires zero installation or configuration. But you can replace it with a MySQL or Postgres database."}),"\n",(0,s.jsx)(a.h2,{id:"configure-sqlite",children:"Configure sqlite"}),"\n",(0,s.jsxs)(a.p,{children:["By default Woodpecker uses a sqlite database stored under ",(0,s.jsx)(a.code,{children:"/var/lib/woodpecker/"}),". You can mount a ",(0,s.jsx)(a.a,{href:"https://docs.docker.com/storage/volumes/#create-and-manage-volumes",children:"data volume"})," to persist the sqlite database."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-diff",children:"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n+   volumes:\n+     - woodpecker-server-data:/var/lib/woodpecker/\n"})}),"\n",(0,s.jsx)(a.h2,{id:"configure-mysql",children:"Configure MySQL"}),"\n",(0,s.jsxs)(a.p,{children:["The below example demonstrates mysql database configuration. See the official driver ",(0,s.jsx)(a.a,{href:"https://github.com/go-sql-driver/mysql#dsn-data-source-name",children:"documentation"})," for configuration options and examples."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-diff",children:"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n+     WOODPECKER_DATABASE_DRIVER: mysql\n+     WOODPECKER_DATABASE_DATASOURCE: root:password@tcp(1.2.3.4:3306)/woodpecker?parseTime=true\n"})}),"\n",(0,s.jsx)(a.h2,{id:"configure-postgres",children:"Configure Postgres"}),"\n",(0,s.jsxs)(a.p,{children:["The below example demonstrates postgres database configuration. See the official driver ",(0,s.jsx)(a.a,{href:"https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING",children:"documentation"})," for configuration options and examples.\nPlease use postgres versions equal or higher than ",(0,s.jsx)(a.strong,{children:"11"}),"."]}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-diff",children:"# docker-compose.yml\nversion: '3'\n\nservices:\n  woodpecker-server:\n    [...]\n    environment:\n+     WOODPECKER_DATABASE_DRIVER: postgres\n+     WOODPECKER_DATABASE_DATASOURCE: postgres://root:password@1.2.3.4:5432/postgres?sslmode=disable\n"})}),"\n",(0,s.jsx)(a.h2,{id:"database-creation",children:"Database Creation"}),"\n",(0,s.jsxs)(a.p,{children:["Woodpecker does not create your database automatically. If you are using the mysql or postgres driver you will need to manually create your database using ",(0,s.jsx)(a.code,{children:"CREATE DATABASE"})]}),"\n",(0,s.jsx)(a.h2,{id:"database-migration",children:"Database Migration"}),"\n",(0,s.jsx)(a.p,{children:"Woodpecker automatically handles database migration, including the initial creation of tables and indexes. New versions of Woodpecker will automatically upgrade the database unless otherwise specified in the release notes."}),"\n",(0,s.jsx)(a.h2,{id:"database-backups",children:"Database Backups"}),"\n",(0,s.jsx)(a.p,{children:"Woodpecker does not perform database backups. This should be handled by separate third party tools provided by your database vendor of choice."}),"\n",(0,s.jsx)(a.h2,{id:"database-archiving",children:"Database Archiving"}),"\n",(0,s.jsx)(a.p,{children:"Woodpecker does not perform data archival; it considered out-of-scope for the project. Woodpecker is rather conservative with the amount of data it stores, however, you should expect the database logs to grow the size of your database considerably."})]})}function u(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},3354:(e,a,o)=>{var s=o(50959),t=Symbol.for("react.element"),r=Symbol.for("react.fragment"),n=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function c(e,a,o){var s,r={},c=null,l=null;for(s in void 0!==o&&(c=""+o),void 0!==a.key&&(c=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,s)&&!d.hasOwnProperty(s)&&(r[s]=a[s]);if(e&&e.defaultProps)for(s in a=e.defaultProps)void 0===r[s]&&(r[s]=a[s]);return{$$typeof:t,type:e,key:c,ref:l,props:r,_owner:i.current}}a.Fragment=r,a.jsx=c,a.jsxs=c},11527:(e,a,o)=>{e.exports=o(3354)},7463:(e,a,o)=>{o.d(a,{Z:()=>i,a:()=>n});var s=o(50959);const t={},r=s.createContext(t);function n(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);