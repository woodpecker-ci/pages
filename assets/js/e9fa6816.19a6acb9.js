"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[563],{5156:e=>{e.exports=JSON.parse('{"name":"Trivy","url":"https://codeberg.org/woodpecker-plugins/trivy","icon":"https://aquasecurity.github.io/trivy/v0.41/imgs/logo.png","description":"Plugin to find vulnerabilities, misconfigurations, secrets, SBOM and more.","docs":"<p>A plugin to find vulnerabilities, misconfigurations, secrets, SBOM and more.</p>\\n<p>The below pipeline configuration demonstrates simple usage:</p>\\n<pre><code class=\\"language-yml\\">pipeline:\\n  scan_vuln:\\n    image: woodpeckerci/plugin-trivy\\n</code></pre>\\n<h2>Settings</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>Settings Name</th>\\n<th>Default</th>\\n<th>Description</th>\\n</tr>\\n</thead>\\n<tbody><tr>\\n<td><code>exit-code</code></td>\\n<td><code>1</code></td>\\n<td>if an issue is detected let the step fail</td>\\n</tr>\\n<tr>\\n<td><code>skip-dirs</code></td>\\n<td><code>vendor,node_modules</code></td>\\n<td>folders excluded from scan</td>\\n</tr>\\n<tr>\\n<td><code>dir</code></td>\\n<td><code>.</code></td>\\n<td>root folder to scan from</td>\\n</tr>\\n<tr>\\n<td><code>server</code></td>\\n<td><em>none</em></td>\\n<td>use a trivy server, can be a service step or extern</td>\\n</tr>\\n<tr>\\n<td><code>severity</code></td>\\n<td><em>none</em></td>\\n<td>severities of security issues to be displayed (comma separated) (default \\"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\\")</td>\\n</tr>\\n</tbody></table>\\n","tags":["check","security","trivy","vulnerabilities","misconfigurations","secrets"],"author":"Woodpecker Authors","containerImage":"woodpeckerci/plugin-trivy","containerImageUrl":"https://hub.docker.com/r/woodpeckerci/plugin-trivy","verified":true}')}}]);