/*! For license information please see 9d771417.c4b71f04.js.LICENSE.txt */
"use strict";(self.webpackChunkwoodpecker=self.webpackChunkwoodpecker||[]).push([[2224],{25280:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>o});var s=i(2488),t=i(51520);const c={},a="Conditional Step Execution",r={id:"usage/conditional-execution",title:"Conditional Step Execution",description:"Woodpecker supports defining conditions for pipeline step by a when block. If all conditions in the when block evaluate to true the step is executed, otherwise it is skipped.",source:"@site/versioned_docs/version-0.15/20-usage/22-conditional-execution.md",sourceDirName:"20-usage",slug:"/usage/conditional-execution",permalink:"/docs/0.15/usage/conditional-execution",draft:!1,unlisted:!1,editUrl:"https://github.com/woodpecker-ci/woodpecker/edit/main/docs/versioned_docs/version-0.15/20-usage/22-conditional-execution.md",tags:[],version:"0.15",sidebarPosition:22,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Pipeline syntax",permalink:"/docs/0.15/usage/pipeline-syntax"},next:{title:"Multi pipelines",permalink:"/docs/0.15/usage/multi-pipeline"}},l={},o=[{value:"<code>repo</code>",id:"repo",level:2},{value:"<code>branch</code>",id:"branch",level:2},{value:"<code>event</code>",id:"event",level:2},{value:"<code>status</code>",id:"status",level:2},{value:"<code>platform</code>",id:"platform",level:2},{value:"<code>environment</code>",id:"environment",level:2},{value:"<code>matrix</code>",id:"matrix",level:2},{value:"<code>instance</code>",id:"instance",level:2},{value:"<code>path</code>",id:"path",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,t.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"conditional-step-execution",children:"Conditional Step Execution"}),"\n",(0,s.jsxs)(n.p,{children:["Woodpecker supports defining conditions for pipeline step by a ",(0,s.jsx)(n.code,{children:"when"})," block. If all conditions in the ",(0,s.jsx)(n.code,{children:"when"})," block evaluate to true the step is executed, otherwise it is skipped."]}),"\n",(0,s.jsx)(n.h2,{id:"repo",children:(0,s.jsx)(n.code,{children:"repo"})}),"\n",(0,s.jsx)(n.p,{children:"Example conditional execution by repository:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:" pipeline:\n   slack:\n     image: plugins/slack\n     settings:\n       channel: dev\n+    when:\n+      repo: test/test\n"})}),"\n",(0,s.jsx)(n.h2,{id:"branch",children:(0,s.jsx)(n.code,{children:"branch"})}),"\n",(0,s.jsx)(n.p,{children:"Example conditional execution by branch:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"pipeline:\n  slack:\n    image: plugins/slack\n    settings:\n      channel: dev\n+   when:\n+     branch: master\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["The step now triggers on master, but also if the target branch of a pull request is ",(0,s.jsx)(n.code,{children:"master"}),". Add an event condition to limit it further to pushes on master only."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Execute a step if the branch is ",(0,s.jsx)(n.code,{children:"master"})," or ",(0,s.jsx)(n.code,{children:"develop"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  branch: [master, develop]\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Execute a step if the branch starts with ",(0,s.jsx)(n.code,{children:"prefix/*"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  branch: prefix/*\n"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step using custom include and exclude logic:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  branch:\n    include: [ master, release/* ]\n    exclude: [ release/1.0.0, release/1.1.* ]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"event",children:(0,s.jsx)(n.code,{children:"event"})}),"\n",(0,s.jsxs)(n.p,{children:["Execute a step if the build event is a ",(0,s.jsx)(n.code,{children:"tag"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  event: tag\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Execute a step if the build event is a ",(0,s.jsx)(n.code,{children:"tag"})," created from the specified branch:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  event: tag\n+ branch: master\n"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step for all non-pull request events:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  event: [push, tag, deployment]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step for all build events:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  event: [push, pull_request, tag, deployment]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"status",children:(0,s.jsx)(n.code,{children:"status"})}),"\n",(0,s.jsx)(n.p,{children:"There are use cases for executing pipeline steps on failure, such as sending notifications for failed pipelines. Use the status constraint to execute steps even when the pipeline fails:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"pipeline:\n  slack:\n    image: plugins/slack\n    settings:\n      channel: dev\n+   when:\n+     status: [ success, failure ]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"platform",children:(0,s.jsx)(n.code,{children:"platform"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step for a specific platform:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  platform: linux/amd64\n"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step for a specific platform using wildcards:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  platform:  [ linux/*, windows/amd64 ]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"environment",children:(0,s.jsx)(n.code,{children:"environment"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step for deployment events matching the target deployment environment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  environment: production\n  event: deployment\n"})}),"\n",(0,s.jsx)(n.h2,{id:"matrix",children:(0,s.jsx)(n.code,{children:"matrix"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step for a single matrix permutation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  matrix:\n    GO_VERSION: 1.5\n    REDIS_VERSION: 2.8\n"})}),"\n",(0,s.jsx)(n.h2,{id:"instance",children:(0,s.jsx)(n.code,{children:"instance"})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step only on a certain Woodpecker instance matching the specified hostname:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  instance: stage.woodpecker.company.com\n"})}),"\n",(0,s.jsx)(n.h2,{id:"path",children:(0,s.jsx)(n.code,{children:"path"})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This feature is currently only available for GitHub, GitLab and Gitea.\nPull requests aren't supported by gitea at the moment (",(0,s.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/pull/18228",children:"go-gitea/gitea#18228"}),").\nPath conditions are ignored for tag events."]})}),"\n",(0,s.jsx)(n.p,{children:"Execute a step only on a pipeline with certain files being changed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:'when:\n  path: "src/*"\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can use ",(0,s.jsx)(n.a,{href:"https://github.com/bmatcuk/doublestar#patterns",children:"glob patterns"})," to match the changed files and specify if the step should run if a file matching that pattern has been changed ",(0,s.jsx)(n.code,{children:"include"})," or if some files have ",(0,s.jsx)(n.strong,{children:"not"})," been changed ",(0,s.jsx)(n.code,{children:"exclude"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-diff",children:"when:\n  path:\n    include: [ '.woodpecker/*.yml', '*.ini' ]\n    exclude: [ '*.md', 'docs/**' ]\n    ignore_message: \"[ALL]\"\n"})}),"\n",(0,s.jsxs)(n.p,{children:["** Hint: ** Passing a defined ignore-message like ",(0,s.jsx)(n.code,{children:"[ALL]"})," inside the commit message will ignore all path conditions."]})]})}function h(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},38088:(e,n,i)=>{var s=i(96651),t=Symbol.for("react.element"),c=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,r=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function o(e,n,i){var s,c={},o=null,d=null;for(s in void 0!==i&&(o=""+i),void 0!==n.key&&(o=""+n.key),void 0!==n.ref&&(d=n.ref),n)a.call(n,s)&&!l.hasOwnProperty(s)&&(c[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===c[s]&&(c[s]=n[s]);return{$$typeof:t,type:e,key:o,ref:d,props:c,_owner:r.current}}n.Fragment=c,n.jsx=o,n.jsxs=o},2488:(e,n,i)=>{e.exports=i(38088)},51520:(e,n,i)=>{i.d(n,{M:()=>a});var s=i(96651);const t={},c=s.createContext(t);function a(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}}}]);