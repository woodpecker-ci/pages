<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Woodpecker CI Blog</title>
        <link>https://woodpecker-ci.org/cookbook</link>
        <description>Woodpecker CI Blog</description>
        <lastBuildDate>Mon, 01 Jan 2024 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Continuous Deployment]]></title>
            <link>https://woodpecker-ci.org/cookbook/continuous-deployment</link>
            <guid>https://woodpecker-ci.org/cookbook/continuous-deployment</guid>
            <pubDate>Mon, 01 Jan 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Deploy your artifacts to an app server]]></description>
            <content:encoded><![CDATA[<p>A typical CI pipeline contains steps such as: <em>clone</em>, <em>build</em>, <em>test</em>, <em>package</em> and <em>push</em>. The final build product may be artifacts pushed to a git repository or a docker container pushed to a container registry.</p>
<p>When these should be deployed on an app server, the pipeline should include a <em>deploy</em> step, which represents the "CD" in CI/CD - the automatic deployment of a pipeline's final product.</p>
<p>There are various ways to accomplish CD with Woodpecker, depending on your project's specific needs.</p>
<h2 class="anchor anchorWithStickyNavbar_JvJb" id="invoking-deploy-script-via-ssh">Invoking deploy script via SSH<a href="https://woodpecker-ci.org/cookbook/continuous-deployment#invoking-deploy-script-via-ssh" class="hash-link" aria-label="Direct link to Invoking deploy script via SSH" title="Direct link to Invoking deploy script via SSH">​</a></h2>
<p>The final step in your pipeline could SSH into the app server and run a deployment script.</p>
<p>One of the benefits would be that the deployment script's output could be included in the pipeline's log. However in general, this is a complicated option as it tightly couples the CI and app servers.</p>
<p>An SSH step could be written by using a plugin, like <a href="https://plugins.drone.io/plugins/ssh" target="_blank" rel="noopener noreferrer">ssh</a> or <a href="https://woodpecker-ci.org/plugins/Git%20Push" target="_blank" rel="noopener noreferrer">git push</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_JvJb" id="polling-for-asset-changes">Polling for asset changes<a href="https://woodpecker-ci.org/cookbook/continuous-deployment#polling-for-asset-changes" class="hash-link" aria-label="Direct link to Polling for asset changes" title="Direct link to Polling for asset changes">​</a></h2>
<p>This option completely decouples the CI and app servers, and there is no explicit deploy step in the pipeline.</p>
<p>On the app server, one should create a script or cron job that polls for asset changes (every minute, say). When a new version is detected, the script redeploys the app.</p>
<p>This option is easy to maintain, but the downside is a short delay (one minute) before new assets are detected.</p>
<h2 class="anchor anchorWithStickyNavbar_JvJb" id="using-a-configuration-management-tool">Using a configuration management tool<a href="https://woodpecker-ci.org/cookbook/continuous-deployment#using-a-configuration-management-tool" class="hash-link" aria-label="Direct link to Using a configuration management tool" title="Direct link to Using a configuration management tool">​</a></h2>
<p>If you are using a configuration management tool (e.g. Ansible, Chef, Puppet), then you could setup the last pipeline step to call that tool to perform the redeployment.</p>
<p>A plugin for <a href="https://woodpecker-ci.org/plugins/Ansible" target="_blank" rel="noopener noreferrer">Ansible</a> exists and could be adapted accordingly.</p>
<p>This option is complex and only suitable in an environment in which you're already using configuration management.</p>
<h2 class="anchor anchorWithStickyNavbar_JvJb" id="using-webhooks-recommended">Using webhooks (recommended)<a href="https://woodpecker-ci.org/cookbook/continuous-deployment#using-webhooks-recommended" class="hash-link" aria-label="Direct link to Using webhooks (recommended)" title="Direct link to Using webhooks (recommended)">​</a></h2>
<p>If your forge (GitHub, GitLab, Gitea, etc.) supports webhooks, then you could create a separate listening app that receives a webhook when new assets are available and redeploys your app.</p>
<p>The listening "app" can be something as simple as a PHP script.</p>
<p>Alternatively, there are a number of popular webhook servers that simplify this process, so you only need to write your actual deployment script. For example, <a href="https://github.com/adnanh/webhook" target="_blank" rel="noopener noreferrer">webhook</a> and <a href="https://github.com/ncarlier/webhookd" target="_blank" rel="noopener noreferrer">webhookd</a>.</p>
<p>This is arguably the simplest and most maintainable solution.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Welcome to Woodpecker's cookbook blog]]></title>
            <link>https://woodpecker-ci.org/cookbook/hello-cookbook</link>
            <guid>https://woodpecker-ci.org/cookbook/hello-cookbook</guid>
            <pubDate>Sat, 23 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Here, we'll publish various guides and tutorials.]]></description>
            <content:encoded><![CDATA[<p>Welcome to this cookbook blog. Here, we and any other interested user can publish guides and tutorials. If you got something in mind, just add your guide!</p>]]></content:encoded>
        </item>
    </channel>
</rss>