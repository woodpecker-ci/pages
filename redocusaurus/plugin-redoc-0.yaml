basePath: /api
definitions:
  Agent:
    properties:
      backend:
        type: string
      capacity:
        type: integer
      created:
        type: integer
      id:
        type: integer
      last_contact:
        type: integer
      last_work:
        description: >-
          last time the agent did something, this value is used to determine if
          the agent is still doing work used by the autoscaler
        type: integer
      name:
        type: string
      no_schedule:
        type: boolean
      owner_id:
        type: integer
      platform:
        type: string
      token:
        type: string
      updated:
        type: integer
      version:
        type: string
    type: object
  Config:
    properties:
      data:
        items:
          type: integer
        type: array
      hash:
        type: string
      name:
        type: string
    type: object
  Cron:
    properties:
      branch:
        type: string
      created_at:
        description: TODO change JSON field to "created" in 3.0
        type: integer
      creator_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      next_exec:
        type: integer
      repo_id:
        type: integer
      schedule:
        description: "@weekly,\t3min, ..."
        type: string
    type: object
  Feed:
    properties:
      author:
        type: string
      author_avatar:
        type: string
      author_email:
        type: string
      branch:
        type: string
      commit:
        type: string
      created_at:
        description: TODO change JSON field to "created" in 3.0
        type: integer
      event:
        type: string
      finished_at:
        description: TODO change JSON field to "finished" in 3.0
        type: integer
      id:
        type: integer
      message:
        type: string
      number:
        type: integer
      ref:
        type: string
      refspec:
        type: string
      repo_id:
        type: integer
      started_at:
        description: TODO change JSON field to "started" in 3.0
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
  Forge:
    properties:
      additional_options:
        additionalProperties: {}
        type: object
      client:
        type: string
      id:
        type: integer
      oauth_host:
        description: public url for oauth if different from url
        type: string
      skip_verify:
        type: boolean
      type:
        $ref: '#/definitions/model.ForgeType'
      url:
        type: string
    type: object
  LogEntry:
    properties:
      data:
        items:
          type: integer
        type: array
      id:
        type: integer
      line:
        type: integer
      step_id:
        type: integer
      time:
        type: integer
      type:
        $ref: '#/definitions/LogEntryType'
    type: object
  LogEntryType:
    enum:
      - 0
      - 1
      - 2
      - 3
      - 4
    type: integer
    x-enum-varnames:
      - LogEntryStdout
      - LogEntryStderr
      - LogEntryExitCode
      - LogEntryMetadata
      - LogEntryProgress
  Org:
    properties:
      forge_id:
        type: integer
      id:
        type: integer
      is_user:
        type: boolean
      name:
        type: string
    type: object
  OrgPerm:
    properties:
      admin:
        type: boolean
      member:
        type: boolean
    type: object
  Perm:
    properties:
      admin:
        type: boolean
      created:
        type: integer
      pull:
        type: boolean
      push:
        type: boolean
      synced:
        type: integer
      updated:
        type: integer
    type: object
  Pipeline:
    properties:
      author:
        type: string
      author_avatar:
        type: string
      author_email:
        type: string
      branch:
        type: string
      changed_files:
        items:
          type: string
        type: array
      commit:
        type: string
      created_at:
        description: TODO change JSON field to "created" in 3.0
        type: integer
      deploy_task:
        type: string
      deploy_to:
        type: string
      errors:
        items:
          $ref: '#/definitions/types.PipelineError'
        type: array
      event:
        $ref: '#/definitions/WebhookEvent'
      finished_at:
        description: TODO change JSON field to "finished" in 3.0
        type: integer
      forge_url:
        type: string
      id:
        type: integer
      is_prerelease:
        type: boolean
      message:
        type: string
      number:
        type: integer
      parent:
        type: integer
      pr_labels:
        items:
          type: string
        type: array
      ref:
        type: string
      refspec:
        type: string
      reviewed_at:
        description: TODO change JSON field to "reviewed" in 3.0
        type: integer
      reviewed_by:
        type: string
      sender:
        description: uses reported user for webhooks and name of cron for cron pipelines
        type: string
      started_at:
        description: TODO change JSON field to "started" in 3.0
        type: integer
      status:
        $ref: '#/definitions/StatusValue'
      timestamp:
        type: integer
      title:
        type: string
      updated_at:
        description: TODO change JSON field to "updated" in 3.0
        type: integer
      variables:
        additionalProperties:
          type: string
        type: object
      workflows:
        items:
          $ref: '#/definitions/model.Workflow'
        type: array
    type: object
  PipelineOptions:
    properties:
      branch:
        type: string
      variables:
        additionalProperties:
          type: string
        type: object
    type: object
  PullRequest:
    properties:
      index:
        type: string
      title:
        type: string
    type: object
  Registry:
    properties:
      address:
        type: string
      id:
        type: integer
      org_id:
        type: integer
      password:
        type: string
      readonly:
        type: boolean
      repo_id:
        type: integer
      username:
        type: string
    type: object
  Repo:
    properties:
      active:
        type: boolean
      allow_deploy:
        type: boolean
      allow_pr:
        type: boolean
      avatar_url:
        type: string
      cancel_previous_pipeline_events:
        items:
          $ref: '#/definitions/WebhookEvent'
        type: array
      clone_url:
        type: string
      clone_url_ssh:
        type: string
      config_file:
        type: string
      default_branch:
        type: string
      forge_id:
        type: integer
      forge_remote_id:
        description: >-
          ForgeRemoteID is the unique identifier for the repository on the
          forge.
        type: string
      forge_url:
        type: string
      full_name:
        type: string
      gated:
        type: boolean
      id:
        type: integer
      name:
        type: string
      netrc_only_trusted:
        type: boolean
      org_id:
        type: integer
      owner:
        type: string
      pr_enabled:
        type: boolean
      private:
        type: boolean
      scm:
        $ref: '#/definitions/SCMKind'
      timeout:
        type: integer
      trusted:
        type: boolean
      visibility:
        $ref: '#/definitions/RepoVisibility'
    type: object
  RepoPatch:
    properties:
      allow_deploy:
        type: boolean
      allow_pr:
        type: boolean
      cancel_previous_pipeline_events:
        items:
          $ref: '#/definitions/WebhookEvent'
        type: array
      config_file:
        type: string
      gated:
        type: boolean
      netrc_only_trusted:
        type: boolean
      timeout:
        type: integer
      trusted:
        type: boolean
      visibility:
        type: string
    type: object
  RepoVisibility:
    enum:
      - public
      - private
      - internal
    type: string
    x-enum-varnames:
      - VisibilityPublic
      - VisibilityPrivate
      - VisibilityInternal
  SCMKind:
    enum:
      - git
      - hg
      - fossil
      - perforce
    type: string
    x-enum-varnames:
      - RepoGit
      - RepoHg
      - RepoFossil
      - RepoPerforce
  Secret:
    properties:
      events:
        items:
          $ref: '#/definitions/WebhookEvent'
        type: array
      id:
        type: integer
      images:
        items:
          type: string
        type: array
      name:
        type: string
      org_id:
        type: integer
      repo_id:
        type: integer
      value:
        type: string
    type: object
  StatusValue:
    enum:
      - skipped
      - pending
      - running
      - success
      - failure
      - killed
      - error
      - blocked
      - declined
      - created
    type: string
    x-enum-comments:
      StatusBlocked: waiting for approval
      StatusCreated: created / internal use only
      StatusDeclined: blocked and declined
      StatusError: error with the config / while parsing / some other system problem
      StatusFailure: failed to finish (exit code != 0)
      StatusKilled: killed by user
      StatusPending: pending to be executed
      StatusRunning: currently running
      StatusSkipped: skipped as another step failed
      StatusSuccess: successfully finished
    x-enum-varnames:
      - StatusSkipped
      - StatusPending
      - StatusRunning
      - StatusSuccess
      - StatusFailure
      - StatusKilled
      - StatusError
      - StatusBlocked
      - StatusDeclined
      - StatusCreated
  Step:
    properties:
      end_time:
        type: integer
      error:
        type: string
      exit_code:
        type: integer
      id:
        type: integer
      name:
        type: string
      pid:
        type: integer
      pipeline_id:
        type: integer
      ppid:
        type: integer
      start_time:
        type: integer
      state:
        $ref: '#/definitions/StatusValue'
      type:
        $ref: '#/definitions/StepType'
      uuid:
        type: string
    type: object
  StepType:
    enum:
      - clone
      - service
      - plugin
      - commands
      - cache
    type: string
    x-enum-varnames:
      - StepTypeClone
      - StepTypeService
      - StepTypePlugin
      - StepTypeCommands
      - StepTypeCache
  Task:
    properties:
      agent_id:
        type: integer
      data:
        items:
          type: integer
        type: array
      dep_status:
        additionalProperties:
          $ref: '#/definitions/StatusValue'
        type: object
      dependencies:
        items:
          type: string
        type: array
      id:
        type: string
      labels:
        additionalProperties:
          type: string
        type: object
      run_on:
        items:
          type: string
        type: array
    type: object
  User:
    properties:
      admin:
        description: |-
          Admin indicates the user is a system administrator.

          NOTE: If the username is part of the WOODPECKER_ADMIN
          environment variable, this value will be set to true on login.
        type: boolean
      avatar_url:
        description: the avatar url for this user.
        type: string
      email:
        description: |-
          Email is the email address for this user.

          required: true
        type: string
      forge_id:
        type: integer
      id:
        description: |-
          the id for this user.

          required: true
        type: integer
      login:
        description: |-
          Login is the username for this user.

          required: true
        type: string
      org_id:
        description: OrgID is the of the user as model.Org.
        type: integer
    type: object
  WebhookEvent:
    enum:
      - push
      - pull_request
      - pull_request_closed
      - tag
      - release
      - deployment
      - cron
      - manual
    type: string
    x-enum-varnames:
      - EventPush
      - EventPull
      - EventPullClosed
      - EventTag
      - EventRelease
      - EventDeploy
      - EventCron
      - EventManual
  model.ForgeType:
    enum:
      - github
      - gitlab
      - gitea
      - forgejo
      - bitbucket
      - bitbucket-dc
      - addon
    type: string
    x-enum-varnames:
      - ForgeTypeGithub
      - ForgeTypeGitlab
      - ForgeTypeGitea
      - ForgeTypeForgejo
      - ForgeTypeBitbucket
      - ForgeTypeBitbucketDatacenter
      - ForgeTypeAddon
  model.Workflow:
    properties:
      agent_id:
        type: integer
      children:
        items:
          $ref: '#/definitions/Step'
        type: array
      end_time:
        type: integer
      environ:
        additionalProperties:
          type: string
        type: object
      error:
        type: string
      id:
        type: integer
      name:
        type: string
      pid:
        type: integer
      pipeline_id:
        type: integer
      platform:
        type: string
      start_time:
        type: integer
      state:
        $ref: '#/definitions/StatusValue'
    type: object
  types.PipelineError:
    properties:
      data: {}
      is_warning:
        type: boolean
      message:
        type: string
      type:
        $ref: '#/definitions/types.PipelineErrorType'
    type: object
  types.PipelineErrorType:
    enum:
      - linter
      - deprecation
      - compiler
      - generic
      - bad_habit
    type: string
    x-enum-comments:
      PipelineErrorTypeBadHabit: some bad-habit error
      PipelineErrorTypeCompiler: some error with the config semantics
      PipelineErrorTypeDeprecation: using some deprecated feature
      PipelineErrorTypeGeneric: some generic error
      PipelineErrorTypeLinter: some error with the config syntax
    x-enum-varnames:
      - PipelineErrorTypeLinter
      - PipelineErrorTypeDeprecation
      - PipelineErrorTypeCompiler
      - PipelineErrorTypeGeneric
      - PipelineErrorTypeBadHabit
info:
  contact:
    name: Woodpecker CI Community
    url: https://woodpecker-ci.org/
  description: >-
    Woodpecker is a simple yet powerful CI/CD engine with great extensibility.

    To get a personal access token (PAT) for authentication, please log in your
    Woodpecker server,

    and go to you personal profile page, by clicking the user icon at the top
    right.
  title: Woodpecker CI API
  version: dev
paths:
  /agents:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Agent'
            type: array
      summary: List agents
      tags:
        - Agents
    post:
      description: Creates a new agent with a random token
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the agent's data (only 'name' and 'no_schedule' are read)
          in: body
          name: agent
          required: true
          schema:
            $ref: '#/definitions/Agent'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Agent'
      summary: Create a new agent
      tags:
        - Agents
  /agents/{agent}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the agent's id
          in: path
          name: agent
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Delete an agent
      tags:
        - Agents
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the agent's id
          in: path
          name: agent
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Agent'
      summary: Get an agent
      tags:
        - Agents
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the agent's id
          in: path
          name: agent
          required: true
          type: integer
        - description: the agent's data
          in: body
          name: agentData
          required: true
          schema:
            $ref: '#/definitions/Agent'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Agent'
      summary: Update an agent
      tags:
        - Agents
  /agents/{agent}/tasks:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the agent's id
          in: path
          name: agent
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Task'
            type: array
      summary: List agent tasks
      tags:
        - Agents
  /badges/{repo_id}/cc.xml:
    get:
      description: >-
        CCMenu displays the pipeline status of projects on a CI server as an
        item in the Mac's menu bar.

        More details on how to install, you can find at http://ccmenu.org/

        The response format adheres to CCTray v1 Specification,
        https://cctray.org/v1/
      parameters:
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - text/xml
      responses:
        '200':
          description: OK
      summary: Provide pipeline status information to the CCMenu tool
      tags:
        - Badges
  /badges/{repo_id}/status.svg:
    get:
      parameters:
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - image/svg+xml
      responses:
        '200':
          description: OK
      summary: Get status of pipeline as SVG badge
      tags:
        - Badges
  /debug/pprof:
    get:
      description: Only available, when server was started with WOODPECKER_LOG_LEVEL=debug
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/html
      responses:
        '200':
          description: OK
      summary: List available pprof profiles (HTML)
      tags:
        - Process profiling and debugging
  /debug/pprof/block:
    get:
      description: Only available, when server was started with WOODPECKER_LOG_LEVEL=debug
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: >-
        Get pprof stack traces that led to blocking on synchronization
        primitives
      tags:
        - Process profiling and debugging
  /debug/pprof/cmdline:
    get:
      description: Only available, when server was started with WOODPECKER_LOG_LEVEL=debug
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get the command line invocation of the current program
      tags:
        - Process profiling and debugging
  /debug/pprof/goroutine:
    get:
      description: Only available, when server was started with WOODPECKER_LOG_LEVEL=debug
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: 1
          description: >-
            Use debug=2 as a query parameter to export in the same format as an
            un-recovered panic
          in: query
          name: debug
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get pprof stack traces of all current goroutines
      tags:
        - Process profiling and debugging
  /debug/pprof/heap:
    get:
      description: Only available, when server was started with WOODPECKER_LOG_LEVEL=debug
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: ''
          description: You can specify gc=heap to run GC before taking the heap sample
          in: query
          name: gc
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get pprof heap dump, a sampling of memory allocations of live objects
      tags:
        - Process profiling and debugging
  /debug/pprof/profile:
    get:
      description: >-
        Only available, when server was started with WOODPECKER_LOG_LEVEL=debug

        After you get the profile file, use the go tool pprof command to
        investigate the profile.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: You can specify the duration in the seconds GET parameter.
          in: query
          name: seconds
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get pprof CPU profile
      tags:
        - Process profiling and debugging
  /debug/pprof/symbol:
    get:
      description: >-
        Only available, when server was started with WOODPECKER_LOG_LEVEL=debug

        Looks up the program counters listed in the request,

        responding with a table mapping program counters to function names.

        The requested program counters can be provided via GET + query
        parameters,

        or POST + body parameters. Program counters shall be space delimited.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get pprof program counters mapping to function names
      tags:
        - Process profiling and debugging
    post:
      description: >-
        Only available, when server was started with WOODPECKER_LOG_LEVEL=debug

        Looks up the program counters listed in the request,

        responding with a table mapping program counters to function names.

        The requested program counters can be provided via GET + query
        parameters,

        or POST + body parameters. Program counters shall be space delimited.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get pprof program counters mapping to function names
      tags:
        - Process profiling and debugging
  /debug/pprof/threadcreate:
    get:
      description: Only available, when server was started with WOODPECKER_LOG_LEVEL=debug
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get pprof stack traces that led to the creation of new OS threads
      tags:
        - Process profiling and debugging
  /debug/pprof/trace:
    get:
      description: >-
        Only available, when server was started with WOODPECKER_LOG_LEVEL=debug

        After you get the profile file, use the go tool pprof command to
        investigate the profile.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: You can specify the duration in the seconds GET parameter.
          in: query
          name: seconds
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get a trace of execution of the current program
      tags:
        - Process profiling and debugging
  /forges:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Forge'
            type: array
      summary: List forges
      tags:
        - Forges
    post:
      description: Creates a new forge with a random token
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the forge's data (only 'name' and 'no_schedule' are read)
          in: body
          name: forge
          required: true
          schema:
            $ref: '#/definitions/Forge'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Forge'
      summary: Create a new forge
      tags:
        - Forges
  /forges/{forgeId}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the forge's id
          in: path
          name: forgeId
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Delete a forge
      tags:
        - Forges
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          type: string
        - description: the forge's id
          in: path
          name: forgeId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Forge'
      summary: Get a forge
      tags:
        - Forges
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the forge's id
          in: path
          name: forgeId
          required: true
          type: integer
        - description: the forge's data
          in: body
          name: forgeData
          required: true
          schema:
            $ref: '#/definitions/Forge'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Forge'
      summary: Update a forge
      tags:
        - Forges
  /healthz:
    get:
      description: >-
        If everything is fine, just a 204 will be returned, a 500 signals server
        state is unhealthy.
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
      summary: Health information
      tags:
        - System
  /hook:
    post:
      parameters:
        - description: the webhook payload; forge is automatically detected
          in: body
          name: hook
          required: true
          schema:
            type: object
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Incoming webhook from forge
      tags:
        - System
  /log-level:
    get:
      description: Endpoint returns the current logging level. Requires admin rights.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
              - type: string
              - properties:
                  log-level:
                    type: string
                type: object
      summary: Current log level
      tags:
        - System
    post:
      description: Endpoint sets the current logging level. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: >-
            the new log level, one of
            <debug,trace,info,warn,error,fatal,panic,disabled>
          in: body
          name: log-level
          required: true
          schema:
            allOf:
              - type: string
              - properties:
                  log-level:
                    type: string
                type: object
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
              - type: string
              - properties:
                  log-level:
                    type: string
                type: object
      summary: Set log level
      tags:
        - System
  /org/lookup/{org_full_name}:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the organizations full name / slug
          in: path
          name: org_full_name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Org'
      summary: Lookup an organization by full name
      tags:
        - Organizations
  /orgs:
    get:
      description: Returns all registered orgs in the system. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Org'
            type: array
      summary: List organizations
      tags:
        - Orgs
  /orgs/{id}:
    delete:
      description: Deletes the given org. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: id
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete an organization
      tags:
        - Orgs
  /orgs/{org_id}:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the organization's id
          in: path
          name: org_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Org'
            type: array
      summary: Get an organization
      tags:
        - Organization
  /orgs/{org_id}/permissions:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the organization's id
          in: path
          name: org_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/OrgPerm'
            type: array
      summary: >-
        Get the permissions of the currently authenticated user for the given
        organization
      tags:
        - Organization permissions
  /orgs/{org_id}/registries:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Registry'
            type: array
      summary: List organization registries
      tags:
        - Organization registries
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the new registry
          in: body
          name: registryData
          required: true
          schema:
            $ref: '#/definitions/Registry'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Create an organization registry
      tags:
        - Organization registries
  /orgs/{org_id}/registries/{registry}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the registry's name
          in: path
          name: registry
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete an organization registry by name
      tags:
        - Organization registries
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the registry's address
          in: path
          name: registry
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Get a organization registry by address
      tags:
        - Organization registries
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the registry's name
          in: path
          name: registry
          required: true
          type: string
        - description: the update registry data
          in: body
          name: registryData
          required: true
          schema:
            $ref: '#/definitions/Registry'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Update an organization registry by name
      tags:
        - Organization registries
  /orgs/{org_id}/secrets:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Secret'
            type: array
      summary: List organization secrets
      tags:
        - Organization secrets
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the new secret
          in: body
          name: secretData
          required: true
          schema:
            $ref: '#/definitions/Secret'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Create an organization secret
      tags:
        - Organization secrets
  /orgs/{org_id}/secrets/{secret}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the secret's name
          in: path
          name: secret
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete an organization secret by name
      tags:
        - Organization secrets
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the secret's name
          in: path
          name: secret
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Get a organization secret by name
      tags:
        - Organization secrets
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the org's id
          in: path
          name: org_id
          required: true
          type: string
        - description: the secret's name
          in: path
          name: secret
          required: true
          type: string
        - description: the update secret data
          in: body
          name: secretData
          required: true
          schema:
            $ref: '#/definitions/Secret'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Update an organization secret by name
      tags:
        - Organization secrets
  /pipelines:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Feed'
            type: array
      summary: List pipelines in queue
      tags:
        - Pipeline queues
  /queue/info:
    get:
      description: >-
        TODO: link the InfoT response object - this is blocked, until the
        `swaggo/swag` tool dependency is v1.18.12 or newer
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get pipeline queue information
      tags:
        - Pipeline queues
  /queue/norunningpipelines:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Block til pipeline queue has a running item
      tags:
        - Pipeline queues
  /queue/pause:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Pause the pipeline queue
      tags:
        - Pipeline queues
  /queue/resume:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Resume the pipeline queue
      tags:
        - Pipeline queues
  /registries:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Registry'
            type: array
      summary: List global registries
      tags:
        - Registries
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the registry object data
          in: body
          name: registry
          required: true
          schema:
            $ref: '#/definitions/Registry'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Create a global registry
      tags:
        - Registries
  /registries/{registry}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the registry's name
          in: path
          name: registry
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a global registry by name
      tags:
        - Registries
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the registry's name
          in: path
          name: registry
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Get a global registry by name
      tags:
        - Registries
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the registry's name
          in: path
          name: registry
          required: true
          type: string
        - description: the registry's data
          in: body
          name: registryData
          required: true
          schema:
            $ref: '#/definitions/Registry'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Update a global registry by name
      tags:
        - Registries
  /repos:
    get:
      description: Returns a list of all repositories. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: only list active repos
          in: query
          name: active
          type: boolean
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Repo'
            type: array
      summary: List all repositories on the server
      tags:
        - Repositories
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the id of a repository at the forge
          in: query
          name: forge_remote_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Repo'
      summary: Activate a repository
      tags:
        - Repositories
  /repos/lookup/{repo_full_name}:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository full name / slug
          in: path
          name: repo_full_name
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Repo'
      summary: Lookup a repository by full name
      tags:
        - Repositories
  /repos/repair:
    post:
      description: Executes a repair process on all repositories. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Repair all repositories on the server
      tags:
        - Repositories
  /repos/{repo_id}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Repo'
      summary: Delete a repository
      tags:
        - Repositories
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Repo'
      summary: Get a repository
      tags:
        - Repositories
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the repository's information
          in: body
          name: repo
          required: true
          schema:
            $ref: '#/definitions/RepoPatch'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Repo'
      summary: Update a repository
      tags:
        - Repositories
  /repos/{repo_id}/branches:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: Get branches of a repository
      tags:
        - Repositories
  /repos/{repo_id}/chown:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Repo'
      summary: Change a repository's owner to the currently authenticated user
      tags:
        - Repositories
  /repos/{repo_id}/cron:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Cron'
            type: array
      summary: List cron jobs
      tags:
        - Repository cron jobs
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the new cron job
          in: body
          name: cronJob
          required: true
          schema:
            $ref: '#/definitions/Cron'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cron'
      summary: Create a cron job
      tags:
        - Repository cron jobs
  /repos/{repo_id}/cron/{cron}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the cron job id
          in: path
          name: cron
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a cron job
      tags:
        - Repository cron jobs
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the cron job id
          in: path
          name: cron
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cron'
      summary: Get a cron job
      tags:
        - Repository cron jobs
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the cron job id
          in: path
          name: cron
          required: true
          type: string
        - description: the cron job data
          in: body
          name: cronJob
          required: true
          schema:
            $ref: '#/definitions/Cron'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Cron'
      summary: Update a cron job
      tags:
        - Repository cron jobs
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the cron job id
          in: path
          name: cron
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
      summary: Start a cron job now
      tags:
        - Repository cron jobs
  /repos/{repo_id}/logs/{number}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Deletes all logs of a pipeline
      tags:
        - Pipeline logs
  /repos/{repo_id}/logs/{number}/{stepID}:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
        - description: the step id
          in: path
          name: stepID
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/LogEntry'
            type: array
      summary: Get logs for a pipeline step
      tags:
        - Pipeline logs
  /repos/{repo_id}/logs/{number}/{stepId}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
        - description: the step id
          in: path
          name: stepId
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete step logs of a pipeline
      tags:
        - Pipeline logs
  /repos/{repo_id}/move:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the username to move the repository to
          in: query
          name: to
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Move a repository to a new owner
      tags:
        - Repositories
  /repos/{repo_id}/permissions:
    get:
      description: The repository permission, according to the used access token.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Perm'
      summary: Check current authenticated users access to the repository
      tags:
        - Repositories
  /repos/{repo_id}/pipelines:
    get:
      description: Get a list of pipelines for a repository.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
        - description: only return pipelines before this RFC3339 date
          in: query
          name: before
          type: string
        - description: only return pipelines after this RFC3339 date
          in: query
          name: after
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Pipeline'
            type: array
      summary: List repository pipelines
      tags:
        - Pipelines
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the options for the pipeline to run
          in: body
          name: options
          required: true
          schema:
            $ref: '#/definitions/PipelineOptions'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
      summary: Trigger a manual pipeline
      tags:
        - Pipelines
  /repos/{repo_id}/pipelines/{number}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a pipeline
      tags:
        - Pipelines
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline, OR 'latest'
          in: path
          name: number
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
      summary: Get a repositories pipeline
      tags:
        - Pipelines
    post:
      description: Restarts a pipeline optional with altered event, deploy or environment
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
        - description: override the event type
          in: query
          name: event
          type: string
        - description: override the target deploy value
          in: query
          name: deploy_to
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
      summary: Restart a pipeline
      tags:
        - Pipelines
  /repos/{repo_id}/pipelines/{number}/approve:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
      summary: Approve and start a pipeline
      tags:
        - Pipelines
  /repos/{repo_id}/pipelines/{number}/cancel:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Cancel a pipeline
      tags:
        - Pipelines
  /repos/{repo_id}/pipelines/{number}/config:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Config'
            type: array
      summary: Get configuration files for a pipeline
      tags:
        - Pipelines
  /repos/{repo_id}/pipelines/{number}/decline:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: number
          required: true
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Pipeline'
      summary: Decline a pipeline
      tags:
        - Pipelines
  /repos/{repo_id}/pull_requests:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/PullRequest'
            type: array
      summary: List active pull requests of a repository
      tags:
        - Repositories
  /repos/{repo_id}/registries:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Registry'
            type: array
      summary: List registries
      tags:
        - Repository registries
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the new registry data
          in: body
          name: registry
          required: true
          schema:
            $ref: '#/definitions/Registry'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Create a registry
      tags:
        - Repository registries
  /repos/{repo_id}/registries/{registry}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the registry name
          in: path
          name: registry
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a registry by name
      tags:
        - Repository registries
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the registry name
          in: path
          name: registry
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Get a registry by name
      tags:
        - Repository registries
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the registry name
          in: path
          name: registry
          required: true
          type: string
        - description: the attributes for the registry
          in: body
          name: registryData
          required: true
          schema:
            $ref: '#/definitions/Registry'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Registry'
      summary: Update a registry by name
      tags:
        - Repository registries
  /repos/{repo_id}/repair:
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Repair a repository
      tags:
        - Repositories
  /repos/{repo_id}/secrets:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Secret'
            type: array
      summary: List repository secrets
      tags:
        - Repository secrets
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the new secret
          in: body
          name: secret
          required: true
          schema:
            $ref: '#/definitions/Secret'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Create a repository secret
      tags:
        - Repository secrets
  /repos/{repo_id}/secrets/{secretName}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the secret name
          in: path
          name: secretName
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a repository secret by name
      tags:
        - Repository secrets
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the secret name
          in: path
          name: secretName
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Get a repository secret by name
      tags:
        - Repository secrets
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the secret name
          in: path
          name: secretName
          required: true
          type: string
        - description: the secret itself
          in: body
          name: secret
          required: true
          schema:
            $ref: '#/definitions/Secret'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Update a repository secret by name
      tags:
        - Repository secrets
  /secrets:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Secret'
            type: array
      summary: List global secrets
      tags:
        - Secrets
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the secret object data
          in: body
          name: secret
          required: true
          schema:
            $ref: '#/definitions/Secret'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Create a global secret
      tags:
        - Secrets
  /secrets/{secret}:
    delete:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the secret's name
          in: path
          name: secret
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a global secret by name
      tags:
        - Secrets
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the secret's name
          in: path
          name: secret
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Get a global secret by name
      tags:
        - Secrets
    patch:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the secret's name
          in: path
          name: secret
          required: true
          type: string
        - description: the secret's data
          in: body
          name: secretData
          required: true
          schema:
            $ref: '#/definitions/Secret'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Secret'
      summary: Update a global secret by name
      tags:
        - Secrets
  /signature/public-key:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Get server's signature public key
      tags:
        - System
  /stream/events:
    get:
      description: With quic and http2 support
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Stream events like pipeline updates
      tags:
        - Events
  /stream/logs/{repo_id}/{pipeline}/{stepID}:
    get:
      parameters:
        - description: the repository id
          in: path
          name: repo_id
          required: true
          type: integer
        - description: the number of the pipeline
          in: path
          name: pipeline
          required: true
          type: integer
        - description: the step id
          in: path
          name: stepID
          required: true
          type: integer
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Stream logs of a pipeline step
      tags:
        - Pipeline logs
  /user:
    get:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Get the currently authenticated user
      tags:
        - User
  /user/feed:
    get:
      description: >-
        The feed lists the most recent pipeline for the currently authenticated
        user.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Feed'
            type: array
      summary: Get the currently authenticated users pipeline feed
      tags:
        - User
  /user/repos:
    get:
      description: Retrieve the currently authenticated User's Repository list
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: query all repos, including inactive ones
          in: query
          name: all
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/Repo'
            type: array
      summary: Get user's repositories
      tags:
        - User
  /user/token:
    delete:
      description: >-
        Reset's the current personal access token of the user and returns a new
        one.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Reset a token
      tags:
        - User
    post:
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '200':
          description: OK
      summary: Return the token of the current user as string
      tags:
        - User
  /users:
    get:
      description: >-
        Returns all registered, active users in the system. Requires admin
        rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - default: 1
          description: for response pagination, page offset number
          in: query
          name: page
          type: integer
        - default: 50
          description: for response pagination, max items per page
          in: query
          name: perPage
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      summary: List users
      tags:
        - Users
    post:
      description: >-
        Creates a new user account with the specified external login. Requires
        admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the user's data
          in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Create a user
      tags:
        - Users
  /users/{login}:
    delete:
      description: Deletes the given user. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the user's login name
          in: path
          name: login
          required: true
          type: string
      produces:
        - text/plain
      responses:
        '204':
          description: No Content
      summary: Delete a user
      tags:
        - Users
    get:
      description: Returns a user with the specified login name. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the user's login name
          in: path
          name: login
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Get a user
      tags:
        - Users
    patch:
      consumes:
        - application/json
      description: Changes the data of an existing user. Requires admin rights.
      parameters:
        - default: Bearer <personal access token>
          description: Insert your personal access token
          in: header
          name: Authorization
          required: true
          type: string
        - description: the user's login name
          in: path
          name: login
          required: true
          type: string
        - description: the user's data
          in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
      summary: Update a user
      tags:
        - Users
  /version:
    get:
      description: Endpoint returns the server version and build information.
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            allOf:
              - type: string
              - properties:
                  source:
                    type: string
                  version:
                    type: string
                type: object
      summary: Get version
      tags:
        - System
schemes: []
swagger: '2.0'
